# Default values for testkube-enterprise.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Run Testkube in enterprise mode (enables enterprise features)
  enterpriseMode: true
  # -- Toggle whether to enable offline license activation in Enterprise mode
  enterpriseOfflineAccess: false
  # -- Specifies the enterprise license key, when using an offline license use `enterpriseLicenseSecretRef` and leave this field empty.
  enterpriseLicenseKey: ''
  # -- This field is deprecated. To specify an offline license file use `enterpriseLicenseSecretRef`.
  enterpriseLicenseFile: ''
  # -- Enterprise license file secret reference. Place the license key under the key `LICENSE_KEY` key in the secret, and in case of an offline license place the license file under the key `license.lic` in the same secret. Make sure that the license key file does not have any new line characters at the end of the file.
  enterpriseLicenseSecretRef: ''
  # -- Domain under which endpoints are exposed
  domain: ''
  # -- UI subdomain which get prepended to the domain
  uiSubdomain: 'dashboard'
  # -- Different UI subdomain which gets prepended to the domain. May be used for the redirect from your actual uiSubdomain endpoint. Works is ingressRedirect option is enabled.
  redirectSubdomain: 'app'
  # -- REST API subdomain which get prepended to the domain
  restApiSubdomain: 'api'
  # -- gRPC API subdomain which get prepended to the domain
  grpcApiSubdomain: 'agent'
  # -- Websocket API subdomain which get prepended to the domain
  websocketApiSubdomain: 'websockets'
  # -- Storage API subdomain which get prepended to the domain
  storageApiSubdomain: 'storage'
  # -- AI API subdomain which get prepended to the domain
  aiApiSubdomain: 'ai'
  # -- TLS certificate provider. Set to "cert-manager" for integration with cert-manager or leave empty for other methods
  certificateProvider: 'cert-manager'
  certManager:
    # -- Certificate Issuer ref (only used if `provider` is set to `cert-manager`)
    issuerRef: 'cert-manager'
  # -- Custom CA to use as a trusted CA during TLS connections. Specify a secret with the PEM encoded CA under the key specified by customCaSecretKey.
  customCaSecretRef: ''
  # -- Custom CA to use as a trusted CA during TLS connections. Specify a key for the secret specified under customCaSecretRef.
  customCaSecretKey: 'ca.crt'
  # -- Image pull secrets to use for testkube-cloud-api and testkube-cloud-ui
  imagePullSecrets: []
  # -- Global image registry to be prepended for to all images (usually defined in parent chart)
  imageRegistry: ''
  ingress:
    # -- Global toggle whether to create Ingress resources
    enabled: true
  dex:
    # -- Global Dex issuer url which is configured both in Dex and API
    issuer: ''
  # -- Common labels which will be added to all resources
  labels: &common_labels {}
  ## Global MongoDB configuration for Testkube Pro
  mongo: &global_mongo_config
    dsn: 'mongodb://testkube-enterprise-mongodb:27017' # -- Mongo DSN connection string
    # -- Mongo DSN connection string secret ref (secret must contain key MONGO_DSN) (default is `mongo-dsn`)
    dsnSecretRef: ''
    # -- Mongo database name
    database: 'testkubeEnterpriseDB'
    # -- Mongo read preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)
    readPreference: secondaryPreferred
    # -- Allow or prohibit writing temporary files on disk when a pipeline stage exceeds the 100 megabyte limit.
    allowDiskUse: false
  ## Global NATS configuration for Testkube Pro
  nats: &global_nats_config
    uri: 'nats://testkube-enterprise-nats:4222' # -- NATS URI
  ## Global S3 configuration for Testkube Pro
  storage:
    # -- S3 bucket in which Test Artifacts & Logs will be stored
    outputsBucket: 'testkube-qa-cloud-outputs'
    # -- Endpoint to a S3 compatible storage service (without protocol)
    endpoint: '{{ .Values.global.storageApiSubdomain }}.{{ .Values.global.domain }}'
    # -- S3 region
    region: 'us-east-1'
    # -- Toggle whether to use HTTPS when connecting to the S3 server
    secure: true
    # -- Toggle whether to skip verifying TLS certificates
    skipVerify: false
    # -- S3 Access Key ID1G
    accessKeyId: 'testkube-enterprise'
    # -- S3 Secret Access Key
    secretAccessKey: 't3stkub3-3nt3rpr1s3'
    # -- S3 Token
    token: ''
    # -- Credentials secret ref (secret should contain keys: root-user, root-password, token) (default is `testkube-cloud-minio-secret`)
    credsSecretRef: ''
    # -- Optional public address of the storage, that can be accessed by user
    public:
      # -- Public endpoint to the storage service, that can be accessed by user
      endpoint: ''
      # -- Toggle whether to use HTTPS when connecting to the public S3 server
      secure: null
  ## -- Configuration for the encrypted Credentials storage
  credentials:
    ## -- Master password to use for deriving encryption key
    masterPassword:
      # -- Reference to the master password stored in the Secret
      secretKeyRef:
        # -- Secret name
        name: ''
        # -- Secret key
        key: 'password'
      # -- Plain-text master password
      value: ''
  tls: {}
  # -- Toggle whether to globally skip certificate verification
  #skipVerify: true
  # -- Global security Context for all containers.
  containerSecurityContext: {}
  # -- Global security Context for all pods.
  podSecurityContext: {}
  # -- Suffix for jobs. You want jobs to be uniquely named across Helm Revisions as Kubernetes
  # Jobs are immutable. Currently the suffix defaults to the Helm Chart's revision. This works
  # well with `helm upgrade --install`. In case you use `helm template` you can change this to
  # a timestamp. For GitOps operators such as Argo CD we recommend to use Resource Hooks or
  # functionality that applies job changes through force Delete/Create instead Replace.
  # job:
  #   nameSuffixOverride: '{{ dateInZone "2006-01-02-15-04-05" (now) "UTC" }}'
  # -- Global PodDisruptionBudget
  podDisruptionBudget:
    enabled: true
# Testkube requires a variety of secrets to operate.
# Any secret not provided manually will be automatically generated with a random value by the shared secret job.
sharedSecretGenerator:
  # -- Toggle whether to enable the Shared Secret Generator Job
  enabled: false
  # -- Pod Security Context for the Shared Secret Generator Job
  securityContext: {}
  # -- Container Security Context for the Shared Secret Generator Job
  containerSecurityContext: {}
  # -- Pod Annotations for the Shared Secret Generator Job
  annotations: {}
  # -- Resources for the Shared Secret Generator Job
  resources: {}
  image:
    registry: docker.io
    repository: bitnami/kubectl
    tag: 1.32.1
## MinIO chart parameters
minio:
  # -- Toggle whether to install MinIO
  enabled: true
  fullnameOverride: &minioFullnameOverride testkube-enterprise-minio
  # -- Common labels which will be added to all MinIO resources
  commonLabels: *common_labels
  # Uncomment if you want to provide different image settings
  image:
    registry: docker.io
    repository: bitnami/minio
    tag: 2025.4.22-debian-12-r2
  # digest: ""
  # pullPolicy: IfNotPresent
  # Uncomment if you want to provide different client image settings
  # clientImage:
  # registry: docker.io
  # repository: bitnami/minio-client
  # tag: 2025.4.16-debian-12-r2
  # digest: ""
  # -- Set resources requests and limits for MinIO
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 2Gi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  pdb:
    create: true
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  auth:
    # -- MinIO root username (access key)
    rootUser: 'testkube-enterprise'
    # -- MinIO root password (secret key)
    rootPassword: 't3stkub3-3nt3rpr1s3'
    # -- Use existing secret for credentials details (`auth.rootUser` and `auth.rootPassword` will be ignored and picked up from this secret). The secret has to contain the keys `root-user` and `root-password`)
    existingSecret: ''
  tls:
    # -- Enable tls in front of the container
    enabled: false
    # -- Generate automatically self-signed TLS certificates
    autoGenerated: false
    # -- Name of an existing secret holding the certificate information
    existingSecret: ''
  # -- Disable MinIO Web UI
  disableWebUI: false
  extraEnvVars: []
  #  - name: FOO
  #    value: "bar"

  # -- Node labels for pod assignment.
  nodeSelector: {}
  # ref: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  # -- Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  tolerations: []
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  # Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  # -- Affinity for pod assignment.
  affinity: {}
  # MinIO Pod Security Context
  podSecurityContext:
    # -- Toggle whether to render the pod security context
    enabled: true
    fsGroup: 1001
  # MinIO container security context
  containerSecurityContext:
    # -- Toggle whether to render the container security context
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ['ALL']
    seccompProfile:
      type: 'RuntimeDefault'
  ## - OpenShift Configuration. Uncomment this section to deploy on Openshift cluster
  #  podSecurityContext:
  #    fsGroup: 1001010000
  #  containerSecurityContext:
  #    enabled: true
  #    runAsUser: 1001010000
  #    runAsNonRoot: true
  metrics:
    serviceMonitor:
      # -- Toggle whether to create ServiceMonitor resource for scraping metrics using Prometheus Operator
      enabled: false
  customIngress:
    # -- Toggle whether to enable the MinIO Ingress
    enabled: true
    # -- Additional labels to add to the MinIO Ingress resource
    labels: {}
    # -- Additional annotations to add to the MinIO Ingress resource
    annotations: {}
    # -- Hostname for which to create rules and TLS certificates (if omitted, the host will be generated using the global subdomain and `domain` values)
    host: ''
    # -- MinIO endpoint used in the Ingress
    endpoint: *minioFullnameOverride
    # -- Ingress class name
    className: nginx
    tls:
      # -- TLS secret name which contains the certificate files
      tlsSecret: testkube-enterprise-minio-tls
## Testkube Cloud API chart parameters
testkube-cloud-api:
  fullnameOverride: testkube-enterprise-api
  replicaCount: 1
  # -- Topology spread constraints can be used to define how pods should be spread across failure domains within your cluster.
  topologySpreadConstraints: []
  # -- Priority class name defines the priority of this pod relative to others in the cluster.
  priorityClassName: ''
  # image:
  #   registry:
  #   repository:
  #   pullPolicy:
  #   tag:
  # migrationImage:
  #   registry:
  #   repository:
  #   pullPolicy:
  #   tag:
  # -- Pod Security Context
  podSecurityContext: {}
  # fsGroup: 2000
  # -- Container Security Context
  securityContext:
    readOnlyRootFilesystem: true
  # -- Specifies the path to the directory (skip the trailing slash) where CA certificates should be mounted. The mounted file should container a PEM encoded CA certificate.
  customCaDirPath: ''
  # -- Specifies the path where the license key should be mounted.
  enterpriseLicenseKeyPath: /testkube/license.key
  # -- Specifies the path where the license file should be mounted.
  enterpriseLicenseFilePath: /testkube/license.lic
  # -- Set resources requests and limits for Testkube Api
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 1
      memory: 512Mi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: false
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  serviceAccount:
    # -- Toggle whether to create a ServiceAccount resource
    create: false
    # -- Additional labels to add to the ServiceAccount resource
    labels: {}
    # -- Additional annotations to add to the ServiceAccount resource
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ''
  audit:
    logger:
      # -- Toggle whether to enable logging audit events to console
      enabled: false
      # -- If enabled, only user ID will be logged, otherwise username/email will also be added as a logger field
      forceIdentifyUsersById: false
    cleanup:
      # -- Toggle whether to enable audit log cleanup
      enabled: true
      # -- Cron expression for audit log cleanup. Timezone is UTC. Only simple cron expressions are supported, '/', '-', and ',' expression are not supported.
      cronInterval: '0 3 * * *'
      # -- Audit log retention period in days
      retentionPeriod: 30
  scim:
    # -- Toggle whether to enable the SCIM server
    enabled: false
    # -- Default organization in which users will be provisioned (must be configured if SCIM server is enabled)
    defaultOrganization: ''
    # -- Port on which the SCIM server will listen
    port: 8091
    auth:
      # -- Token which will be used to authenticate SCIM requests (not recommended for production usage)
      token: ''
      # -- Secret ref for SCIM server authentication (secret must contain key SCIM_AUTH_TOKEN)
      secretRef: ''
  api:
    storage:
      cleanup:
        # -- Specify the retention period in days for test artifacts. Values lower than 1 disable cleanup.
        retentionDays: -1
        # -- Specify the max storage size in gigabytes after which oldest test artifacts will be rotated until current size <= max storage size. Values lower than 1 disable cleanup.
        maxStorageSizeGb: -1
    features:
      # -- Toggle whether to disable personal organizations when a user signs up for the first time
      disablePersonalOrgs: false
      # -- Toggle whether to enable support for legacy tests (Test, TestSuite)
      legacyTests: false
    debug:
      # -- Toggle whether to enable debug logs by setting the GODEBUG=http2debug=2
      enableHttp2Logs: false
      # -- Toggle whether to enable gRPC server logs
      enableGrpcServerLogs: false
    # -- External log server connection configuration
    logServer:
      # -- Toggle whether to enable external log server connection
      enabled: false
      # -- Log server address
      grpcAddress: 'testkube-enterprise-logs-service:8089'
      # -- Log server TLS configuration secure connection
      secure: 'false'
      # -- Log server TLS configuration skip Verify
      skipVerify: 'true'
      # -- TLS certificate file
      certFile: ''
      # -- TLS key file
      keyFile: ''
      # -- TLS CA certificate file
      caFile: ''
    # -- Configure the invitation mode — set to email to send invitations via SMTP, or use none if you don't have an SMTP server.
    inviteMode: none
    email:
      # -- Email to use for sending outgoing emails
      fromEmail: ''
      # -- Name to use for sending outgoing emails
      fromName: ''
    smtp:
      # -- SMTP host
      host: ''
      # -- SMTP port
      port: 587
      # -- SMTP username
      username: ''
      # -- SMTP password
      password: ''
      # -- SMTP secret ref (secret must contain key SMTP_PASSWORD), overrides password field if defined
      passwordSecretRef: ''
    sendgrid:
      # -- Sendgrid API key
      apiKey: ''
      # -- Secret API key secret ref (secret must contain key SENDGRID_API_KEY)
      secretRef: ''
    tls:
      certManager:
        # -- Certificate Issuer kind (only used if `provider` is set to `cert-manager`)
        issuerKind: ClusterIssuer
        # -- Certificate Issuer group (only used if `provider` is set to `cert-manager`)
        issuerGroup: cert-manager.io
        # -- Certificate duration/lifetime. Value must be in units accepted by Go time.ParseDuration: https://golang.org/pkg/time/#ParseDuration
        duration: ''
      tlsSecret: testkube-enterprise-api-tls
    migrations:
      # -- Toggle whether to run database migrations
      enabled: true
      # -- Toggle whether to set Argo resource hook annotations
      useArgoHooks: true
      image:
        # -- Migrations image repository
        repository: kubeshop/testkube-migration
      # -- TTL for the migration job, defaults to 4 days
      ttlSecondsAfterFinished: 345600
    mongo: *global_mongo_config
    nats: *global_nats_config
    minio:
      # -- Path to where a Minio credential file should be mounted
      credsFilePath: ''
      # -- Expiration period in days
      expirationPeriod: 0
      # -- If enabled, will also require a CA certificate to be provided
      mountCACertificate: false
      # Configure this if you want a different hostname for the presigned PUT URL (used by Agents to upload artifacts)
      signing:
        # -- Hostname for the presigned PUT URL
        hostname: ''
        # -- Toggle should the presigned URL use HTTPS
        secure: false
      certSecret:
        # -- Toggle whether to mount k8s secret which contains storage client certificate (cert.crt, cert.key, ca.crt)
        enabled: false
        # -- Name of the storage client certificate secret
        name: 'storage-client-cert'
        # -- Base path to mount the client certificate secret
        baseMountPath: /etc/client-certs/storage
        # -- Path to client certificate file
        certFile: 'cert.crt'
        # -- Path to client certificate key file
        keyFile: 'cert.key'
        # -- Path to ca file (used for self-signed certificates)
        caFile: 'ca.crt'
    agent:
      healthcheck:
        # -- Agent healthcheck distributed mode (one of mongo|kv) - used for pods sync to run healthchecks on single pod at once
        lock: kv
      hide: false
      # -- Agent host (without protocol) is used for building agent install commands (if blank, api will autogenerate it based on the value of `global.domain`)
      host: ''
      # -- Agent port - used for building agent install commands
      port: 443
      # -- Toggle whether to enable agent grpc keepalive pings
      keepAlive: false
    oauth:
      # -- OAuth secret ref for OAuth configuration (secret must contain keys: OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, OAUTH_ISSUER_URL, OAUTH_REDIRECT_URI) (default is `testkube-cloud-oauth-secret`)
      secretRef: ''
      # -- OAuth Client ID for the configured CLI public static client in Dex
      cliClientId: 'testkube-cloud-cli'
      # -- OAuth Client ID for the configured static client in Dex
      clientId: 'testkube-enterprise'
      # -- OAuth Client ID for the configured static client in Dex
      clientSecret: 'QWkVzs3nct6HZM5hxsPzwaZtq'
      # -- If oauth.secretRef is empty (""), then oauth.redirectUri field will be used for the OAuth redirect URI
      redirectUri: ''
      # -- if oauth.secretRef is empty (""), then oauth.issuerUrl field will be used for the OAuth issuer URL
      issuerUrl: ''
      # -- Toggle whether to skip TLS verification for OAuth issuer
      skipVerify: false
    # -- S3 bucket in which to store logs & artifacts
    outputsBucket: testkube-cloud-outputs
  prometheus:
    enabled: false
  ingress:
    className: nginx
  ## Test Connection pod
  testConnection:
    enabled: false
## Testkube Cloud UI chart parameters
testkube-cloud-ui:
  fullnameOverride: testkube-enterprise-ui
  replicaCount: 1
  # -- Topology spread constraints can be used to define how pods should be spread across failure domains within your cluster.
  topologySpreadConstraints: []
  # -- Priority class name defines the priority of this pod relative to others in the cluster.
  priorityClassName: ''
  ui:
    # -- Auth strategy to use (possible values: "" (default), "gitlab", "github"), setting to "" enables all auth strategies, if you use a custom Dex connector, set this to the id of the connector
    authStrategy: ''
  ai:
    # -- Enable Testkube AI features
    enabled: false
    # -- Testkube AI service API URI
    aiServiceApiUri: ''
  additionalEnv:
    FEATURE_MULTI_AGENT: true
  # image:
    # registry:
    # repository:
    # pullPolicy:
    # tag:
  # -- Pod Security Context
  podSecurityContext: {}
  # fsGroup: 2000
  # -- Container Security Context
  securityContext:
    readOnlyRootFilesystem: true
  # -- Set resources requests and limits for Testkube UI
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 150m
      memory: 128Mi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: false
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  ingress:
    # -- Name of the TLS secret which contains the certificate files
    tlsSecretName: testkube-enterprise-ui-tls
    # -- Ingress classname
    className: nginx
  # -- Toggle whether to enable redirect Ingress which allows having a different subdomain redirecting to the actual Dashboard UI Ingress URL
  ingressRedirect:
    enabled: false
## Testkube Agent chart parameters
testkube-agent:
  # -- Toggle whether to install & connect Testkube Agent in the same namespace.
  # Keep it disabled to have more control over where your agents run.
  # See https://docs.testkube.io/articles/install/overview for more info.
  # This relies on the `testkube-default-agent-token` shared secret.
  # See https://docs.testkube.io/articles/install/install-with-helm#shared-secrets
  enabled: false
  # Uncomment the configuration below if testkube-agent is enabled.
  #testkube-dashboard:
  #  enabled: false
  #mongodb:
  #  enabled: false
  #testkube-api:
  #  cloud:
  #    url: testkube-enterprise-api:8089
  #    tls:
  #      enabled: false
  #    existingSecret:
  #      name: testkube-default-agent-token
  #      key: agent-token
## Testkube Worker Service chart parameters
testkube-worker-service:
  fullnameOverride: testkube-enterprise-worker-service
  # -- Priority class name defines the priority of this pod relative to others in the cluster.
  priorityClassName: ''
  # image:
  #   registry:
  #   repository:
  #   pullPolicy:
  #   tag:
  # -- Pod Security Context
  podSecurityContext: {}
  # fsGroup: 2000
  # -- Container Security Context
  securityContext:
    readOnlyRootFilesystem: true
  # -- Set resources requests and limits for Testkube Worker Service
  resources:
    requests:
      cpu: 75m
      memory: 64Mi
    limits:
      cpu: 500m
      memory: 512Mi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: false
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  api:
    nats: *global_nats_config
    mongo: *global_mongo_config
    minio:
      # -- Path to where a Minio credential file should be mounted
      credsFilePath: ''
  additionalEnv:
    USE_MINIO: true
  # -- Specifies the path to the directory (skip the trailing slash) where CA certificates should be mounted. The mounted file should container a PEM encoded CA certificate.
  customCaDirPath: ''
## Testkube AI Service chart parameters
testkube-ai-service:
  fullnameOverride: testkube-enterprise-ai-service
  # -- Toggle whether to install the Testkube AI service
  enabled: false
  replicaCount: 1
  # -- Topology spread constraints can be used to define how pods should be spread across failure domains within your cluster.
  topologySpreadConstraints: []
  # -- Priority class name defines the priority of this pod relative to others in the cluster.
  priorityClassName: ''
  # image:
    # registry:
    # repository:
    # pullPolicy:
    # tag:
  imagePullSecrets: []
  nameOverride: ''
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ''
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    # -- Service type
    type: ClusterIP
    # -- Additional annotations to add to the Service resource
    annotations: {}
    # -- Additional labels to add to the Service resource
    labels: {}
    # -- AI API port
    port: 9090
  tls:
    # -- Toggle should the Application terminate TLS instead of the Ingress
    serveHTTPS: true
    # -- TLS secret name which contains the certificate files
    tlsSecret: testkube-ai-tls
    certManager:
      # -- Certificate Issuer kind (only used if `provider` is set to `cert-manager`)
      issuerKind: ClusterIssuer
      # -- Certificate Issuer group (only used if `provider` is set to `cert-manager`)
      issuerGroup: cert-manager.io
      # -- Certificate duration/lifetime. Value must be in units accepted by Go time.ParseDuration: https://golang.org/pkg/time/#ParseDuration
      duration: ''
    # -- Mount path for the certificate
    certPath: /tmp/serving-cert/crt.pem
    # -- Mount path for the certificate private key
    keyPath: /tmp/serving-cert/key.pem
  ingress:
    enabled: true
    className: 'nginx'
    annotations: {}
  # -- Additional env vars to be added to the deployment, expects an array of EnvVar objects (supports name, value, valueFrom, etc.)
  additionalEnvVars: []
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: false
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  # -- Hostname for which to create rules and TLS certificates (if omitted, the host will be generated using the global subdomain and `domain` values)
  host: ''
  # -- URI to Testkube's control plane REST API (e.g. https://api.testkube.io)
  controlPlaneRestApiUri: ''
  # -- Environment of deployment
  nodeEnv: 'production'
  # -- Log level
  logLevel: 'info'
  # -- Use OpenID Connect (OIDC) Discovery URI to fetch configurations from the identity provider. The path should end with `/.well-known/openid-configuration`.
  oidcDiscoveryUri: ''
  # -- Specify issuer to skip OIDC Discovery
  oauthIssuer: ''
  # -- Specify the URL to fetch the JWK set document and skip OIDC Discovery
  oauthJwksUri: ''
  # -- OAuth audience represents the expected value of the `aud` claim in the JWT token. This is the static client ID in the Dex configuration.
  oauthAudience: 'testkube-enterprise'
  # -- Configuration for tracing and monitoring LLM operations in Testkube Cloud. Not required for enterprise/on-premises deployments.
  llmTracing:
    # -- Can be provided directly or referenced from a secret.
    apiKey: ''
    # -- Reference to the secret containing the API Key.
    secretRef: ''
    # -- Reference to the secret key containing the LLM API token.
    secretRefKey: ''
  # -- Configuration for LLM API that supports OpenAI API specification
  llmApi:
    # -- Optional URL for custom LLM API services (defaults to OpenAI if not provided)
    url: ''
    # -- OpenAI API Key - can be provided directly or referenced from a secret
    apiKey: ''
    # -- Reference to the secret containing the OpenAI API Key. Place value into `OPENAI_API_KEY` key.
    secretRef: ''
    # -- Reference to the secret key containing the LLM API token.
    secretRefKey: ''
## NATS chart parameter
## For more configuration parameters of NATS chart please look here: https://docs.nats.io/running-a-nats-service/nats-kubernetes/helm-charts
nats:
  # -- Toggle whether to install NATS
  enabled: true
  fullnameOverride: testkube-enterprise-nats
  # Uncomment if you want to provide a different image or pullPolicy
  container:
    merge:
      # -- Set resources requests and limits for NATS container
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 512Mi
      # -- Set Security Context for NATS container
      securityContext: {}
  # image:
  # repository: nats
  # tag: 2.10.21-alpine
  # pullPolicy: IfNotPresent
  # registry:
  config:
    cluster:
      # -- Enable cluster mode (HA)
      enabled: true
      # -- NATS cluster replicas
      replicas: 3
    jetstream:
      # -- Toggle whether to enable JetStream (Testkube requires JetStream to be enabled, so this setting should always be on)
      enabled: true
      fileStore:
        pvc:
          enabled: true
          size: 10Gi
          storageClassName:
    # -- Merge additional fields to nats config
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#container-v1-core
    merge:
      # -- NATS message maximum payload size
      max_payload: << 8MB >>
      cluster:
        # -- NATS cluster name
        name: << testkube-enterprise >>
      # -- Enable debug for NATS
      debug: false
    # -- Patch additional fields to nats config
    patch: []
  # Reloader container settings
  reloader:
    # -- Toggle whether to install Reloader
    enabled: true
    # Uncomment if you want to provide a different image or pullPolicy
    # image:
    # repository: natsio/nats-server-config-reloader
    # tag: 0.17.2
    # pullPolicy:
    # registry:

    # -- Map of additional env vars
    env: {}
    # -- Merge additional fields to the container
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#container-v1-core
    merge:
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 256Mi
      # -- Set Security Context for reloader container
      securityContext: {}
    patch: []
  # NATS Box container settings
  natsBox:
    enabled: false
    container:
      # -- Merge additional fields to the container
      merge:
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        # -- Set a security Context for NatsBox container
        securityContext: {}
    # Uncomment if you want to provide a different image or pullPolicy
    # container:
    # image:
    # repository: natsio/nats-box
    # tag: 0.14.5
    # pullPolicy:
    # registry:
    ## - OpenShift Configuration. Uncomment this section to deploy on Openshift cluster
    #    container:
    #      image:
    #        repository: natsio/nats-box #used to fix this: https://github.com/nats-io/nats-box/pull/66
    #        tag: 0.14.5-nonroot
    podTemplate:
      merge:
        spec:
          # -- Set a security Context for NatsBox pod
          securityContext: {}
  # Exporter container settings
  promExporter:
    # -- Toggle whether to install NATS exporter
    enabled: false
    # Uncomment if you want to provide a different image or pullPolicy
    # image:
    # repository: natsio/prometheus-nats-exporter
    # tag: 0.15.0
    # pullPolicy:
    # registry:

    # -- Map of additional env vars
    env: {}
    # -- Merge additional fields to the container
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#container-v1-core
    merge:
      securityContext: {}
    # -- Patch additional fields to the container
    patch: []
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: true
    # merge or patch the pod disruption budget
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#poddisruptionbudget-v1-policy
    merge: {}
    patch: []
    # defaults to "{{ include "nats.fullname" $ }}"
    name:
## MongoDB chart parameters
## For more configuration parameters of MongoDB chart please look here: https://github.com/bitnami/charts/tree/master/bitnami/mongodb#parameters
mongodb:
  # -- Toggle whether to install MongoDB
  enabled: true
  image:
    registry: docker.io
    # We have forked the Bitnami image as it did not support arm64, and the
    # zcube/bitnami-compat-mongodb image that we previously used for the demo
    # installer is unmaintained, stuck on Mongo 6, and incompatible with the
    # latest Bitnami charts:
    repository: kubeshop/bitnami-mongodb
    tag: 7.0.20
  # -- MongoDB fullname override
  fullnameOverride: 'testkube-enterprise-mongodb'
  # -- Common labels which will be added to all MongoDB resources
  commonLabels: *common_labels
  # MongoDB Auth settings
  auth:
    # -- Toggle whether to enable MongoDB authentication
    enabled: false
    # rootPassword: "123DefaultOne321"
  # -- Set resources requests and limits for MongoDB
  resources:
    requests:
      cpu: 150m
      memory: 256Mi
    limits:
      cpu: 2
      memory: 2Gi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  pdb:
    create: true
    # -- Minimum number/percentage of pods that must still be available after the eviction
    minAvailable: ''
    # -- Maximum number/percentage of pods that may be made unavailable after the eviction
    maxUnavailable: ''
  tolerations: []
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- MongoDB Pod Security Context
  podSecurityContext: {}
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  # -- Security Context for MongoDB container
  containerSecurityContext: {}
  # MongoDB uses ReadWriteOnce access mode for PV. It means that the volume can be accessed by pods that reside on the same node.
  # If during an upgrade a new Mongo pod with RollingUpdate strategy is scheduled on a different node, the upgrade will fail with the error: Volume is already used by pod.
  # Therefore, it is required to use Recreate strategy to kill existing pods on upgrade before creating new ones.
  updateStrategy:
    # -- Update Strategy type
    type: Recreate
    ## - OpenShift Configuration. Uncomment this section to deploy on Openshift cluster
#  podSecurityContext:
#    fsGroup: 1001010000
#  containerSecurityContext:
#    enabled: true
#    runAsUser: 1001010000
#    runAsNonRoot: true
## Dex chart parameters
## For more configuration parameters of Dex chart please look here: https://github.com/dexidp/helm-charts
dex:
  # -- Toggle whether to install Dex
  enabled: true
  fullnameOverride: testkube-enterprise-dex
  # Uncomment if you want to provide different image settings
  #image:
  #  registry: docker.io
  #  repository: kubeshop/dex
  #  tag: ""
  #  pullPolicy: IfNotPresent

  # -- Common labels which will be added to all Dex resources
  commonLabels: *common_labels
  rbac:
    # -- Specifies whether RBAC resources should be created.
    # If disabled, the operator is responsible for creating the necessary resources based on the templates.
    create: true
    # -- Specifies which RBAC resources should be created.
    # If disabled, the operator is responsible for creating the necessary resources (ClusterRole and RoleBinding or CRD's)
    createClusterScoped: true
  configSecret:
    # -- This should be set to `false` so Dex does not create the config secret. Refer to the `createCustom` field for more info on creating config secret.
    create: false
    # -- Toggle whether to create a custom config secret for Dex (templates/dex-config-secret.yaml). If set to `true`, the `configTemplate` field will be used to generate the config secret.
    createCustom: true
    # -- The name of the secret to mount as configuration in the pod. Set `createCustom: false` and edit the secret manually to use a custom config secret.
    name: 'testkube-enterprise-dex-config'
  # -- Configure backend for Dex internal config (more info here https://dexidp.io/docs/storage)
  storage: {}
  # example config for saving Dex internal data as Kubernetes CRDs
  # type: kubernetes
  # config:
  # inCluster: true
  # -- Inline Dex configuration which will be used to generate the config secret.
  configTemplate:
    # -- If provided, it will completely override the default config (`base` and `additionalConfig`). This is useful if you want to use a custom config file.
    customConfig: ''
    base: |
      logger:
        level: debug
        format: json
      web:
        http: 0.0.0.0:5556
      expiry:
        deviceRequests: "5m"
        signingKeys: "6h"
        idTokens: "24h"
        refreshTokens:
          disableRotation: false
          reuseInterval: "3s"
          validIfNotUsedFor: "2160h" # 90 days
          absoluteLifetime: "3960h" # 165 days
      oauth2:
        responseTypes: ["code"]
        skipApprovalScreen: true
        alwaysShowLoginScreen: false
        passwordConnector: local
    # -- Additional static clients which will be appended to the dex staticClients config
    additionalStaticClients: []
    #  - id: testkube-cloud-local
    #    name: Testkube Cloud - localdev
    #    redirectURIs:
    #      - http://localhost:8090/auth/callback
    #      - http://localhost:38090/auth/callback
    #    secret: some-secret
    # -- Additional config which will be appended to the config like `staticClients`, `staticPasswords ,`connectors`...
    additionalConfig: ''
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  # -- Security Context for Dex container
  securityContext: {}
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- Dex Pod Security Context
  podSecurityContext: {}
  # -- Set resources requests and limits for Dex Service
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 392Mi
  # -- Enable a [pod distruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) to help dealing with [disruptions](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/).
  podDisruptionBudget:
    enabled: false
    # -- (int/percentage) Number or percentage of pods that must remain available.
    minAvailable: ''
    # -- (int/percentage) Number or percentage of pods that can be unavailable.
    maxUnavailable: ''
  ingress:
    # -- Toggle whether to enable ingress for Dex
    enabled: true
    # -- Additional annotations for Dex ingress
    annotations: {}
    # -- Testkube Enterprise supports only NGINX Controller currently
    className: nginx
    hosts:
      - host: '{{ .Values.global.restApiSubdomain }}.{{ .Values.global.domain }}'
        paths:
          - path: /idp
            pathType: Prefix
    tls:
      - secretName: testkube-enterprise-api-tls
        hosts:
          - '{{ .Values.global.restApiSubdomain }}.{{ .Values.global.domain }}'
image:
  tag: 2.3.3

